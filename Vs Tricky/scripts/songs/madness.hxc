import funkin.play.song.Song;
import funkin.play.PlayState;
import funkin.play.PlayStatePlaylist;
import funkin.graphics.FunkinSprite;
import funkin.audio.FunkinSound;
import flixel.text.FlxText;
import funkin.Paths;
import flixel.FlxSprite;
import flixel.util.FlxTimer;
import flixel.tweens.FlxTween;
import flixel.tweens.FlxEase;
import flixel.FlxG;
import funkin.play.cutscene.VideoCutscene;

class MadnessSong extends Song {
  	var hasPlayedCutscene:Bool;
  	var hasPlayedSecondCutscene:Bool;

  	public function new() {
    	super('madness');
    
    	hasPlayedCutscene = false;
    	hasPlayedSecondCutscene = false;
  	}
  
	public var cutsceneText:Array<String> = ["YOU DO NOT KILL CLOWN", "CLOWN KILLS YOU!!!!!!"];

	var tstatic:FlxSprite;
	var spookyText:FlxText;
	var MAINLIGHT:FlxSprite;
	var spookyRendered:Bool = false;
	
	function onCreate(event:ScriptEvent) {
		super.onCreate(event);

		tstatic = new FlxSprite(0,0).loadGraphic(Paths.image('bgs/TrickyStatic'), true, 320, 180);
		tstatic.antialiasing = true;
		tstatic.animation.add('static', [0, 1, 2], 24, true);
		tstatic.animation.play('static');
		tstatic.setGraphicSize(Std.int(tstatic.width * 8));
		tstatic.updateHitbox();
		tstatic.screenCenter();

		tstatic.alpha = 0;

		spookyText = new FlxText();
		spookyText.setFormat(Paths.font("impact.ttf"), 128, 0xFFFF0000);
		spookyText.bold = true;
		spookyText.zIndex = 301;

		spookyText.alpha = 0;
		
		MAINLIGHT = new FlxSprite(-470, -150).loadGraphic(Paths.image('bgs/default/hue'));
		MAINLIGHT.alpha = 0.7;
		MAINLIGHT.setGraphicSize(Std.int(MAINLIGHT.width * 0.9));
		MAINLIGHT.blend = "screen";
		MAINLIGHT.updateHitbox();
		MAINLIGHT.antialiasing = true;
		MAINLIGHT.scrollFactor.set(1.2, 1.2);
    
    	hasPlayedCutscene = false;
	}

  	public override function onCountdownStart(event:CountdownScriptEvent):Void {
		super.onCountdownStart(event);
	  
		if (!PlayStatePlaylist.isStoryMode)
     		hasPlayedCutscene = true;
      
    	if(!hasPlayedCutscene) { 
    		hasPlayedCutscene = true;
      
      		//event.cancel();

			//PlayState.instance.camHUD.visible = false;

			//PlayState.instance.isInCutscene = true;

      		//VideoCutscene.play(Paths.videos('HankFuckingShootsTricky'));
		}
  	}

  	function onSongRetry(event:ScriptEvent) {
    	super.onSongRetry(event);

    	hasPlayedCutscene = true;
    	hasPlayedSecondCutscene = false;
  	}

  	function playCutscene() {
		PlayState.instance.currentStage.add(spookyText);
		PlayState.instance.currentStage.add(tstatic);
		PlayState.instance.currentStage.add(MAINLIGHT);

		tstatic.cameras = [PlayState.instance.camCutscene];
		MAINLIGHT.cameras = [PlayState.instance.camCutscene];

		PlayState.instance.currentStage.refresh();

		var done:Bool = false;

		var black:FlxSprite = new FlxSprite(-300, -120).makeGraphic(FlxG.width * 2, FlxG.height * 2, 0xFFFFFFFF);
		black.scrollFactor.set();
		black.alpha = 0;

		var animation:FlxSprite = FunkinSprite.createSparrow(1100, 670, 'cutscenes/trickman');
		animation.antialiasing = true;
		animation.animation.addByPrefix('cut1','Cutscene 1', 24, false);
		animation.animation.addByPrefix('cut2','Cutscene 2', 24, false);
		animation.animation.addByPrefix('cut3','Cutscene 3', 24, false);
		animation.animation.addByPrefix('cut4','Cutscene 4', 24, false);
		animation.animation.addByPrefix('pillar','Pillar Beam Tricky', 24, false);
		
		animation.setGraphicSize(Std.int(animation.width * 1.5));

		animation.alpha = 0;

		PlayState.instance.tweenCameraToPosition(PlayState.instance.currentStage.getDad().cameraFocusPoint.x, PlayState.instance.currentStage.getDad().cameraFocusPoint.y + 100, 3, FlxEase.quadInOut);

		PlayState.instance.isInCutscene = true;

		var sounders:FunkinSound = FunkinSound.load(Paths.sound('honkers'), 0, true);
		var energy:FunkinSound = FunkinSound.load(Paths.sound('energy shot'));
		var roar:FunkinSound = FunkinSound.load(Paths.sound('sound_clown_roar'));
		var pillar:FunkinSound = FunkinSound.load(Paths.sound('firepillar'));

		var fade:FlxSprite = new FlxSprite(-300, -120).makeGraphic(FlxG.width * 2, FlxG.height * 2, 0xFF130000);
		fade.scrollFactor.set();
		fade.alpha = 0;

		PlayState.instance.add(animation);

		PlayState.instance.add(black);

		PlayState.instance.add(fade);

		var startFading:Bool = false;
		var varNumbaTwo:Bool = false;
		var fadeDone:Bool = false;

		sounders.fadeIn(30);

		new FlxTimer().start(0.01, function(tmr:FlxTimer) {
			if (fade.alpha != 1 && !varNumbaTwo) {
				PlayState.instance.camHUD.alpha -= 0.1;
				fade.alpha += 0.1;
				if (fade.alpha == 1) {
					varNumbaTwo = true;

					animation.alpha = 1;
					
      				PlayState.instance.currentStage.getDad().alpha = 0.000001;
				}
				tmr.reset(0.1);
			} else {
				fade.alpha -= 0.1;
				if (fade.alpha <= 0.5)
					fadeDone = true;
				tmr.reset(0.1);
			}
		});

		var roarPlayed:Bool = false;

		new FlxTimer().start(0.01, function(tmr:FlxTimer) {
			if (!fadeDone)
				tmr.reset(0.1)
			else {
				if (animation.animation == null || animation.animation.name == null) {
					animation.animation.play("cut1");
					createSpookyText(cutsceneText[0], 1100, FlxG.height * 0.9 + 400);
				}

				if (!animation.animation.finished) {
					tmr.reset(0.1);

					switch(animation.animation.frameIndex) {
						case 104:
							if (animation.animation.name == 'cut1')
								resetSpookyTextManual();
					}

					if (animation.animation.name == 'pillar') {
						if (animation.animation.frameIndex >= 85)
							startFading = true;
						FlxG.camera.shake(0.05);
					}
				} else {
					resetSpookyTextManual();
					switch(animation.animation.name) {
						case 'cut1':
							animation.animation.play('cut2');
						case 'cut2':
							animation.animation.play('cut3');
							energy.play();
						case 'cut3':
							animation.animation.play('cut4');
							createSpookyText(cutsceneText[1], 1100, FlxG.height * 0.9 + 400);
							animation.y += 10;
							animation.x -= 95;
						case 'cut4':
							resetSpookyTextManual();
							sounders.fadeOut();
							pillar.fadeIn(4);
							animation.animation.play('pillar');
							animation.y -= 660;
							animation.x -= 220;
					}
					tmr.reset(0.1);
				}

				if (startFading) {
					sounders.fadeOut();
					
					if (black.alpha != 1) {
						tmr.reset(0.1);
						black.alpha += 0.02;

						if (black.alpha >= 0.7 && !roarPlayed) {
							roar.play();
							roarPlayed = true;
						}
					} else if (done) {
						PlayState.instance.endSong();
						FlxG.camera.stopFX();
					} else {
						done = true;
						tmr.reset(5);
					}
				}
			}
		});
	}
	
	function onUpdate(event:ScriptEvent) {
		super.onUpdate(event);

    	if (spookyText != null && PlayState.instance.isInCutscene) {
		  	spookyText.angle = FlxG.random.int(-5,5); 
  
		  	if (tstatic.alpha != 0)
		  		tstatic.alpha = FlxG.random.float(0.1, 0.5);
    	}
		
		var resetTimer:FlxTimer;
	
		if (spookyRendered && resetTimer == null) {
			resetTimer = new FlxTimer().start(0.5, function(_) {
				tstatic.alpha = 0;
				resetTimer = null;
			});
		}
	}

	function onSongEnd(event:CountdownScriptEvent) {
		super.onSongEnd(event);
		
		if (!PlayStatePlaylist.isStoryMode)
     		hasPlayedSecondCutscene = true;
      
    	if(!hasPlayedSecondCutscene) { 
    		hasPlayedSecondCutscene = true;
      
      		event.cancel();

			playCutscene();
		}
	}

	function resetSpookyTextManual():Void {
		spookyRendered = true;
		tstatic.alpha = 0.5;
		FlxG.sound.play(Paths.sound('staticSound'));
		PlayState.instance.remove(spookyText);
	}

	function manuallymanuallyresetspookytextmanual() {
		PlayState.instance.remove(spookyText);
		spookyRendered = false;
		tstatic.alpha = 0;
	}

	function createSpookyText(text:String, posx:Float = -1111111111111, posy:Float = -1111111111111):Void {
		spookyRendered = true;
		tstatic.alpha = 0.5;
		FlxG.sound.play(Paths.sound('staticSound'));

		spookyText = new FlxText((posx == -1111111111111 ? FlxG.random.float(850 + 40, 850 + 120) : posx),
			(posy == -1111111111111 ? FlxG.random.float(550 + 200, 550 + 300) : posy));
		spookyText.setFormat(Paths.font("impact.ttf"), 128, 0xFFFF0000);
		spookyText.bold = true;
		spookyText.zIndex = 302;
		spookyText.text = text;
		PlayState.instance.add(spookyText);
	}
}