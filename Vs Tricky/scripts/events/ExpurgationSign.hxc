import funkin.audio.FunkinSound;
import flixel.FlxG;
import funkin.graphics.FunkinSprite;
import funkin.Paths;
import funkin.play.event.SongEvent;
import funkin.play.PlayState;

class ExpurgationSign extends SongEvent {
	public function new() {
		super("ExpurgationSign");
	}

	public override function handleEvent(data:SongEventData) {
		if (PlayState.instance == null || PlayState.instance.currentStage == null)
			return;

    	doStopSign(data.value.type, data.value.flipX);
    
    	PlayState.instance.currentStage.refresh();
	}

	public function getEventSchema() {
		return [
			{
				name: "type",
				title: "Type",
				defaultValue: 0,
				step: 1,
				type: "integer"
			},
			{
				name: "flipX",
				title: "FlipX",
				type: "bool",
				defaultValue: false
			}
		];
	}

	public function getTitle() {
		return "Expurgation Sign";
	}

	function doStopSign(sign:Int = 0, flipX:Bool = false):Void {
		var daSign:FunkinSprite = FunkinSprite.createSparrow(0, 0, "mechanics/Sign_Post_Mechanic");
		daSign.setGraphicSize(Std.int(daSign.width * 0.67));
		daSign.cameras = [PlayState.instance.camHUD];
    	daSign.zIndex = 1500;

		switch(sign) {
			case 0:
				daSign.animation.addByPrefix("sign", "Signature Stop Sign 1", 24, false);
				daSign.x = FlxG.width - 650;
				daSign.angle = -90;
				daSign.y = -300;
			case 1:
				daSign.animation.addByPrefix("sign", "Signature Stop Sign 3", 24, false);
				daSign.x = FlxG.width - 780;
				daSign.angle = -90;
				if (FlxG.save.data.downscroll)
					daSign.y = -395;
				else
					daSign.y = -980;
			case 2:
				daSign.animation.addByPrefix("sign", "Signature Stop Sign 4", 24, false);
				daSign.x = FlxG.width - 1070;
				daSign.angle = -90;
				daSign.y = -145;
		}

		PlayState.instance.add(daSign);
		daSign.flipX = flipX;
		daSign.animation.play("sign");
		daSign.animation.finishCallback = function(pog:String) {
			PlayState.instance.remove(daSign);
		}
	}
}